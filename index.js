// Generated by CoffeeScript 1.8.0
(function() {
  var app, body_parser, ddg, express, home, html_dir, http, search, util, wikipedia, youtube;

  express = require('express');

  body_parser = require('body-parser');

  app = express();

  app.set('port', process.env.PORT || 5000);

  app.use(express["static"](__dirname + '/public'));

  app.use(body_parser.json());

  app.use(body_parser.urlencoded({
    extended: true
  }));

  http = require('http');

  util = require('util');

  wikipedia = function(query, deliver) {
    return http.get({
      host: "http://en.wikipedia.org/w/api.php?action=opensearch&search=" + query
    }, function(res) {
      return deliver(res[1]);
    });
  };

  youtube = function(query, deliver) {
    return http.get({
      host: "http://en.wikipedia.org/w/api.php?action=opensearch&search=" + "bla" + query
    }, function(res) {
      return deliver(res[1]);
    });
  };

  search = function(term, cb) {
    var api, deliver, done, results, _i, _len, _ref, _results;
    results = [];
    done = 2;
    deliver = function(items) {
      done -= 1;
      results += items;
      if (done === 0) {
        return cb(results);
      }
    };
    _ref = [wikipedia, youtube];
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      api = _ref[_i];
      _results.push(api(term, deliver));
    }
    return _results;
  };

  ddg = function(query, cb) {
    var callb, str;
    str = "";
    callb = function(resp) {
      resp.on('data', function(data) {
        return str += data;
      });
      return resp.on('end', function(data) {
        return cb(str);
      });
    };
    return http.get("http://api.duckduckgo.com/?q=" + query + "&format=json", callb);
  };

  html_dir = './public/';

  home = function() {
    return res.sendFile(html_dir + 'index.html');
  };

  app.get('/', function(req, res) {
    return home();
  });

  app.get('/note/:id', function(req, res) {
    if (req.params.id) {
      return res.send(new Buffer(decodeURIComponent(req.params.id), 'base64').toString('ascii'));
    } else {
      return home();
    }
  });

  app.post('/search', function(req, res) {
    var f;
    f = function(x) {
      return res.send(x + "");
    };
    return ddg(req.body.term, f);
  });

  app.get('/widget/:query', function(req, res) {
    return widget(decodeURIComponent(req.params.query));
  });

  app.post('/publish', function(req, res) {
    return res.send(encodeURIComponent(new Buffer(widget(decodeURIComponent(req.body.input))).toString('base64')));
  });

  app.get('/*', function(req, res) {
    return res.send("not found");
  });

  app.listen(app.get('port'), function() {
    return console.log("Node app is running at localhost:" + app.get('port'));
  });

}).call(this);
